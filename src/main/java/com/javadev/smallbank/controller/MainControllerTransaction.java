package com.javadev.smallbank.controller;

import com.javadev.smallbank.entity.Transaction;
import com.javadev.smallbank.repository.TransactionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/tr") // This means URL's start with /tr (after Application path)
public class MainControllerTransaction {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TransactionRepository transactionRepository;

    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody
    void addNewTransaction (/*@RequestParam Date time,*/
                            @RequestParam Integer clientId,
                            @RequestParam Integer fromAccountId,
                            @RequestParam Integer toAccountId,
                            @RequestParam Double amount,
                            HttpServletResponse httpServletResponse) throws IOException {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Transaction transaction = new Transaction();
        /*transaction.setTime(time);*/
        transaction.setClientId(clientId);
        transaction.setFromAccountId(fromAccountId);
        transaction.setToAccountId(toAccountId);
        transaction.setAmount(amount);
        transactionRepository.save(transaction);
        httpServletResponse.sendRedirect("../transaction.html");
//        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Transaction> getAllUsers() {
        // This returns a JSON or XML with the users
        return transactionRepository.findAll();
    }
}
